from typing import Protocol
from dark_libraries.dark_math   import Coord

from models.agents.monster_agent import MonsterAgent
from models.agents.party_member_agent import PartyMemberAgent
from models.agents.npc_agent   import NpcAgent

class NpcService(Protocol):

    def get_npcs(self) -> dict[Coord[int], NpcAgent]: ...
    def add_npc(self, npc_agent: NpcAgent): ...
    def remove_npc(self, npc_agent: NpcAgent): ...
    def get_attacking_npc(self) -> NpcAgent: ...
    def set_attacking_npc(self, npc_agent: NpcAgent): ...
    def get_npc_at(self, coord: Coord) -> NpcAgent | None: ...
    def get_occupied_coords(self) -> set[Coord]: ...
    def get_next_moving_npc(self) -> NpcAgent | None: ...
    def get_party_members(self) -> list[PartyMemberAgent]: ...
    def get_party_member_count(self) -> int: ...
    def get_monsters(self) -> list[MonsterAgent]: ...
    def get_monster_count(self) -> int: ...
    
